# Please refer https://aka.ms/HTTPSinContainer on how to setup an https developer certificate for your ASP .NET Core service.

version: "3.4"

services:

# Apis

  user:
    container_name: user
    image: user:latest
    build:
      context: .
      dockerfile: Services/User/Dockerfile
    ports:
      - 5000:5000
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:5000      

  customer:
    container_name: customer
    image: customer:latest
    build:
      context: .
      dockerfile: Services/Customer/Dockerfile
    ports:
      - 5001:5001
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:5001      

  supplier:
    container_name: supplier
    image: supplier:latest
    build:
      context: .
      dockerfile: Services/Supplier/Dockerfile
    ports:
      - 5002:5002
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:5002 

# Databases

  db-user:
    image: postgres:14.1-alpine
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - '5432:5432'
    volumes: 
      - db-user:/var/lib/postgresql/data

  db-customer:
    image: postgres:14.1-alpine
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - '5432:5432'
    volumes: 
      - db-customer:/var/lib/postgresql/data

  db-supplier:
    image: postgres:14.1-alpine
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - '5432:5432'
    volumes: 
      - db-supplier:/var/lib/postgresql/data

# Message Queue

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: "rabbitmq"
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq/
      - rabbitmq_log:/var/log/rabbitmq/
    networks:
      - rabbitmq_go_net

volumes:
    rabbitmq_data:
    rabbitmq_log:
    db-user:
      driver: local
    db-customers:
      driver: local
    db-supplier:
      driver: local

networks:
  rabbitmq_go_net:
    driver: bridge
